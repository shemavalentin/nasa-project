# first step is to name our workflow by passing in the name field

name: NASA Project CI

# The first thing to do is to control when this workflow will run using the on() method
on:
  # Defining different triggers that will cause this workflow to run
  #  in our case, we want to build our project whenever there is new code pushed
  push:
    # specifically run when there is new codes pushed to these branches defined in the array
    # under branches options

    branches: [master] # this is where we need to verfy our codes works and that we can build our project

    #  But if we are using Github's pull request flow, where we ask the main repository
    #  to marge in some changes that we've made instead of pushing them directly onto the
    #  master branch, Well to cacth those pull requests we can add another trigger

  pull_request:
    branches: [master]

    #  THE FUN PARTS HERE
    #  Here we define JOBS that are supposed to run when one of these two events are
    #  triggered under this jobs property

  jobs:
    build:  # We should specify which platform, this job should run on, which operating system will be building our project
    runs-on: ubuntu-latest     # Could be also windows-latest, or macos-latest
      steps:    # This is where we define actions(reusable scripts) that are going to be taken on ubuntu whenever our build job is triggered by a push or pull request to the master branch
      # 1st step
        - uses: actions/chechout@v3   #These actions have been prebuilt for us by github's developpers or third party. we have to add the version of these scripts to avoid breaks of our workflow when the owner releases the breaking changes
        
      # 2nd step: this step is to make sure we have node installed, and we can give it a name
        - name: use Node.js version 20
          uses: actions/setup-node@v3
            with:
              node-version: '20'
              - run: npm install
              #but we also need to run our client by running Create React App  build script inside the client folder
              - run: npm run build --prefix client










    # # when we are doing continious deployment we can add onother job like deploy
    # # and by default github's action would run through both of these jobs in parallel, side by side
    # deploy:
    #   #  But if we need to that deploy job will run when the build job is success, we
    #   #  have to add another option
    #   needs: build # Now, github's action will run these jobs sequetially.

